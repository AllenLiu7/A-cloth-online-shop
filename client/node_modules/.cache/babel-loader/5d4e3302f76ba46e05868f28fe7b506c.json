{"ast":null,"code":"// Firebase App (the core Firebase SDK) is always required and must be listed first\nimport firebase from \"firebase/app\"; // If you enabled Analytics in your project, add the Firebase SDK for Analytics\n\nimport \"firebase/analytics\"; // Add the Firebase products that you want to use\n\nimport \"firebase/auth\";\nimport \"firebase/firestore\"; // TODO: Replace the following with your app's Firebase project configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBUbkrY_TDXhlq7jtY_WLs6MHqvKKJz0zU\",\n  authDomain: \"cloth-commerce.firebaseapp.com\",\n  databaseURL: \"https://cloth-commerce.firebaseio.com\",\n  projectId: \"cloth-commerce\",\n  storageBucket: \"cloth-commerce.appspot.com\",\n  messagingSenderId: \"230557840593\",\n  appId: \"1:230557840593:web:643ef4e058de9d698b01f0\",\n  measurementId: \"G-P95CFTJ8NF\"\n}; // Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\nexport const createUserProfileDocument = async (user, additionalData) => {\n  if (!user) return;\n  const userRef = firestore.doc(`Users/${user.uid}`);\n  const snapShot = await userRef.get();\n\n  if (!snapShot.exists) {\n    const {\n      displayName,\n      email\n    } = user;\n    const createAt = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        createAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  //create reference to a new collection with the name {collectionKey}\n  const collectionRef = firestore.collection(collectionKey);\n  console.log(collectionRef); //use batch to finish the whole object, if something wrong in the middle, all objects will not be set.\n\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    //create empty docRef for each objects with unique id\n    const newDocRef = collectionRef.doc();\n    console.log(newDocRef); //originally can be newDocRef.set(obj), but here we use batch.\n\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n}; //export these const for usage elsewhere\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore(); //set up google auth\n\nvar provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/Projects/Ecommerce/ecommerce_project/src/firebase/firebase.utils.js"],"names":["firebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","user","additionalData","userRef","firestore","doc","uid","snapShot","get","exists","displayName","email","createAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA;AACA,OAAOA,QAAP,MAAqB,cAArB,C,CAEA;;AACA,OAAO,oBAAP,C,CAEA;;AACA,OAAO,eAAP;AACA,OAAO,oBAAP,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAE,yCADa;AAErBC,EAAAA,UAAU,EAAE,gCAFS;AAGrBC,EAAAA,WAAW,EAAE,uCAHQ;AAIrBC,EAAAA,SAAS,EAAE,gBAJU;AAKrBC,EAAAA,aAAa,EAAE,4BALM;AAMrBC,EAAAA,iBAAiB,EAAE,cANE;AAOrBC,EAAAA,KAAK,EAAE,2CAPc;AAQrBC,EAAAA,aAAa,EAAE;AARM,CAAvB,C,CAWA;;AACAT,QAAQ,CAACU,aAAT,CAAuBT,cAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,IAAP,EAAaC,cAAb,KAAgC;AACvE,MAAI,CAACD,IAAL,EAAW;AAEX,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,IAAI,CAACK,GAAI,EAAhC,CAAhB;AAEA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AAEA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AACpB,UAAM;AAAEC,MAAAA,WAAF;AAAeC,MAAAA;AAAf,QAAyBV,IAA/B;AACA,UAAMW,QAAQ,GAAG,IAAIC,IAAJ,EAAjB;;AAEA,QAAI;AACF,YAAMV,OAAO,CAACW,GAAR,CAAY;AAChBJ,QAAAA,WADgB;AAEhBC,QAAAA,KAFgB;AAGhBC,QAAAA,QAHgB;AAIhB,WAAGV;AAJa,OAAZ,CAAN;AAMD,KAPD,CAOE,OAAOa,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,KAAK,CAACG,OAAzC;AACD;AACF;;AAED,SAAOf,OAAP;AACD,CAxBM;AA0BP,OAAO,MAAMgB,yBAAyB,GAAG,OACvCC,aADuC,EAEvCC,YAFuC,KAGpC;AACH;AACA,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYK,aAAZ,EAHG,CAKH;;AACA,QAAME,KAAK,GAAGpB,SAAS,CAACoB,KAAV,EAAd;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAsBC,GAAD,IAAS;AAC5B;AACA,UAAMC,SAAS,GAAGL,aAAa,CAACjB,GAAd,EAAlB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYU,SAAZ,EAH4B,CAI5B;;AACAH,IAAAA,KAAK,CAACV,GAAN,CAAUa,SAAV,EAAqBD,GAArB;AACD,GAND;AAQA,SAAO,MAAMF,KAAK,CAACI,MAAN,EAAb;AACD,CAnBM,C,CAqBP;;AACA,OAAO,MAAMC,IAAI,GAAGxC,QAAQ,CAACwC,IAAT,EAAb;AACP,OAAO,MAAMzB,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB,C,CAEP;;AACA,IAAI0B,QAAQ,GAAG,IAAIzC,QAAQ,CAACwC,IAAT,CAAcE,kBAAlB,EAAf;AAEAD,QAAQ,CAACE,mBAAT,CAA6B;AAC3BC,EAAAA,MAAM,EAAE;AADmB,CAA7B;AAIA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAezC,QAAf","sourcesContent":["// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\n\r\n// If you enabled Analytics in your project, add the Firebase SDK for Analytics\r\nimport \"firebase/analytics\";\r\n\r\n// Add the Firebase products that you want to use\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\n// TODO: Replace the following with your app's Firebase project configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBUbkrY_TDXhlq7jtY_WLs6MHqvKKJz0zU\",\r\n  authDomain: \"cloth-commerce.firebaseapp.com\",\r\n  databaseURL: \"https://cloth-commerce.firebaseio.com\",\r\n  projectId: \"cloth-commerce\",\r\n  storageBucket: \"cloth-commerce.appspot.com\",\r\n  messagingSenderId: \"230557840593\",\r\n  appId: \"1:230557840593:web:643ef4e058de9d698b01f0\",\r\n  measurementId: \"G-P95CFTJ8NF\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const createUserProfileDocument = async (user, additionalData) => {\r\n  if (!user) return;\r\n\r\n  const userRef = firestore.doc(`Users/${user.uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = user;\r\n    const createAt = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createAt,\r\n        ...additionalData,\r\n      });\r\n    } catch (error) {\r\n      console.log(\"error creating user\", error.message);\r\n    }\r\n  }\r\n\r\n  return userRef;\r\n};\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  //create reference to a new collection with the name {collectionKey}\r\n  const collectionRef = firestore.collection(collectionKey);\r\n  console.log(collectionRef);\r\n\r\n  //use batch to finish the whole object, if something wrong in the middle, all objects will not be set.\r\n  const batch = firestore.batch();\r\n  objectsToAdd.forEach((obj) => {\r\n    //create empty docRef for each objects with unique id\r\n    const newDocRef = collectionRef.doc();\r\n    console.log(newDocRef);\r\n    //originally can be newDocRef.set(obj), but here we use batch.\r\n    batch.set(newDocRef, obj);\r\n  });\r\n\r\n  return await batch.commit();\r\n};\r\n\r\n//export these const for usage elsewhere\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n//set up google auth\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;\r\n"]},"metadata":{},"sourceType":"module"}