{"ast":null,"code":"import { shopItemActionTypes } from \"./shop-item.types\";\nimport { firestore, convertCollectionsSnapshotToMap } from \"../../firebase/firebase.utils\";\nexport const fetchCollectionsStart = () => ({\n  type: shopItemActionTypes.ADD_DATA_TO_REDUCER\n});\nexport const fetchCollectionsSuccess = data => ({\n  type: shopItemActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: data\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: shopItemActionTypes.fetchCollection,\n  errorMessage: errorMessage\n}); // export const fetchCollectionsStartAsync = () => {\n//   return (dispatch) => {\n//     const collectionRef = firestore.collection(\"collections\");\n//     dispatch(fetchCollectionsStart());\n//     collectionRef\n//       .get()\n//       .then((snapshot) => {\n//         const data = convertCollectionsSnapshotToMap(snapshot);\n//         dispatch(fetchCollectionSuccess(data));\n//       })\n//       .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\n//   };\n// };\n\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection(\"collections\");\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(snapshot => {\n      const data = convertCollectionsSnapshotToMap(snapshot);\n      dispatch(fetchCollectionsSuccess(data));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["E:/Projects/Ecommerce/ecommerce_project/src/redux/shop-items/shop-item.actions.js"],"names":["shopItemActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","ADD_DATA_TO_REDUCER","fetchCollectionsSuccess","data","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","fetchCollection","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,mBAApC;AAEA,SACEC,SADF,EAEEC,+BAFF,QAGO,+BAHP;AAKA,OAAO,MAAMC,qBAAqB,GAAG,OAAO;AAC1CC,EAAAA,IAAI,EAAEJ,mBAAmB,CAACK;AADgB,CAAP,CAA9B;AAIP,OAAO,MAAMC,uBAAuB,GAAIC,IAAD,KAAW;AAChDH,EAAAA,IAAI,EAAEJ,mBAAmB,CAACQ,yBADsB;AAEhDC,EAAAA,OAAO,EAAEF;AAFuC,CAAX,CAAhC;AAKP,OAAO,MAAMG,uBAAuB,GAAIC,YAAD,KAAmB;AACxDP,EAAAA,IAAI,EAAEJ,mBAAmB,CAACY,eAD8B;AAExDD,EAAAA,YAAY,EAAEA;AAF0C,CAAnB,CAAhC,C,CAKP;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAME,0BAA0B,GAAG,MAAM;AAC9C,SAAQC,QAAD,IAAc;AACnB,UAAMC,aAAa,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEAY,IAAAA,aAAa,CACVE,GADH,GAEGC,IAFH,CAESC,QAAD,IAAc;AAClB,YAAMZ,IAAI,GAAGL,+BAA+B,CAACiB,QAAD,CAA5C;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,IAAD,CAAxB,CAAR;AACD,KALH,EAMGa,KANH,CAMUC,KAAD,IAAWP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAN5B;AAOD,GAXD;AAYD,CAbM","sourcesContent":["import { shopItemActionTypes } from \"./shop-item.types\";\r\n\r\nimport {\r\n  firestore,\r\n  convertCollectionsSnapshotToMap,\r\n} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n  type: shopItemActionTypes.ADD_DATA_TO_REDUCER,\r\n});\r\n\r\nexport const fetchCollectionsSuccess = (data) => ({\r\n  type: shopItemActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\n  payload: data,\r\n});\r\n\r\nexport const fetchCollectionsFailure = (errorMessage) => ({\r\n  type: shopItemActionTypes.fetchCollection,\r\n  errorMessage: errorMessage,\r\n});\r\n\r\n// export const fetchCollectionsStartAsync = () => {\r\n//   return (dispatch) => {\r\n//     const collectionRef = firestore.collection(\"collections\");\r\n//     dispatch(fetchCollectionsStart());\r\n\r\n//     collectionRef\r\n//       .get()\r\n//       .then((snapshot) => {\r\n//         const data = convertCollectionsSnapshotToMap(snapshot);\r\n//         dispatch(fetchCollectionSuccess(data));\r\n//       })\r\n//       .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n//   };\r\n// };\r\n\r\nexport const fetchCollectionsStartAsync = () => {\r\n  return (dispatch) => {\r\n    const collectionRef = firestore.collection(\"collections\");\r\n    dispatch(fetchCollectionsStart());\r\n\r\n    collectionRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        const data = convertCollectionsSnapshotToMap(snapshot);\r\n        dispatch(fetchCollectionsSuccess(data));\r\n      })\r\n      .catch((error) => dispatch(fetchCollectionsFailure(error.message)));\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}