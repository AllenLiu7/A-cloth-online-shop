{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Ecommerce\\\\ecommerce_project\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport \"./App.css\";\nimport HomePage from \"./pages/home-page/homepage.component\";\nimport CheckoutPage from \"./pages/checkout-page/checkout-page.component\";\nimport ShopPage from \"./pages/shop-page/shop-page.component\";\nimport Header from \"./components/header/header.component\";\nimport SignPage from \"./pages/sign-in&up-page/sign-in&up-page.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\"; //import { setCurrentUser } from \"./redux/user/user.action\";\n\nimport { selectCurrentUser } from \"./redux/user/user.seletors\";\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {//const { setCurrentUser } = this.props;\n    // //Every time there is a  user sign in, onAuthStateChanged will return \"user\" contains user detail\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async (user) => {\n    //   if (user) {\n    //     //If the user dosen't exist, createUserProfileDocument will create a profile for this user (from google), so that this user will have a UID which is used for session\n    //     //If the user exist, this function will be passed\n    //     const userRef = await createUserProfileDocument(user);\n    //     console.log(user);\n    //     console.log(userRef);\n    //     //noSnapshot is a listener, when ever snapshot is changed, onSnapShot will send back the changed snapshot, here the change could be the signed in time.\n    //     userRef.onSnapshot((snapShot) => {\n    //       setCurrentUser(\n    //         {\n    //           currentUser: {\n    //             id: snapShot.id,\n    //             //.data()will get back properties stored in db\n    //             ...snapShot.data(),\n    //           },\n    //         },\n    //         () => {\n    //           console.log(this.state);\n    //         }\n    //       );\n    //     });\n    //   } else {\n    //     //if no one signed in, the user = null.\n    //     setCurrentUser(user);\n    //   }\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/sign\",\n      render: () => this.props.currentUser ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 40\n        }\n      }) : /*#__PURE__*/React.createElement(SignPage, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 62\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state)\n}); // const mapDispatchToProps = (dispatch) => ({\n//   setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n// });\n\n\nexport default connect(mapStateToProps)(App);","map":{"version":3,"sources":["E:/Projects/Ecommerce/ecommerce_project/src/App.js"],"names":["React","Switch","Route","Redirect","connect","HomePage","CheckoutPage","ShopPage","Header","SignPage","auth","createUserProfileDocument","selectCurrentUser","App","Component","unsubscribeFromAuth","componentDidMount","componentWillUnmount","render","props","currentUser","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,QAAxB,QAAwC,kBAAxC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,WAAP;AAEA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,YAAP,MAAyB,+CAAzB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,OAAOC,QAAP,MAAqB,mDAArB;AACA,SAASC,IAAT,EAAeC,yBAAf,QAAgD,2BAAhD,C,CACA;;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,mBADgC,GACV,IADU;AAAA;;AAGhCC,EAAAA,iBAAiB,GAAG,CAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAEDC,EAAAA,oBAAoB,GAAG;AACrB,SAAKF,mBAAL;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,GAAlB;AAAsB,MAAA,SAAS,EAAEb,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAEE,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,MAAM,EAAE,MACN,KAAKY,KAAL,CAAWC,WAAX,gBAAyB,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAzB,gBAA+C,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,eAUE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,WAAlB;AAA8B,MAAA,SAAS,EAAEd,YAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVF,CAFF,CADF;AAiBD;;AAzD+B;;AA4DlC,MAAMe,eAAe,GAAIC,KAAD,KAAY;AAClCF,EAAAA,WAAW,EAAER,iBAAiB,CAACU,KAAD;AADI,CAAZ,CAAxB,C,CAIA;AACA;AACA;;;AAEA,eAAelB,OAAO,CAACiB,eAAD,CAAP,CAAyBR,GAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\n\nimport \"./App.css\";\n\nimport HomePage from \"./pages/home-page/homepage.component\";\nimport CheckoutPage from \"./pages/checkout-page/checkout-page.component\";\nimport ShopPage from \"./pages/shop-page/shop-page.component\";\nimport Header from \"./components/header/header.component\";\nimport SignPage from \"./pages/sign-in&up-page/sign-in&up-page.component\";\nimport { auth, createUserProfileDocument } from \"./firebase/firebase.utils\";\n//import { setCurrentUser } from \"./redux/user/user.action\";\nimport { selectCurrentUser } from \"./redux/user/user.seletors\";\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n    //const { setCurrentUser } = this.props;\n    // //Every time there is a  user sign in, onAuthStateChanged will return \"user\" contains user detail\n    // this.unsubscribeFromAuth = auth.onAuthStateChanged(async (user) => {\n    //   if (user) {\n    //     //If the user dosen't exist, createUserProfileDocument will create a profile for this user (from google), so that this user will have a UID which is used for session\n    //     //If the user exist, this function will be passed\n    //     const userRef = await createUserProfileDocument(user);\n    //     console.log(user);\n    //     console.log(userRef);\n    //     //noSnapshot is a listener, when ever snapshot is changed, onSnapShot will send back the changed snapshot, here the change could be the signed in time.\n    //     userRef.onSnapshot((snapShot) => {\n    //       setCurrentUser(\n    //         {\n    //           currentUser: {\n    //             id: snapShot.id,\n    //             //.data()will get back properties stored in db\n    //             ...snapShot.data(),\n    //           },\n    //         },\n    //         () => {\n    //           console.log(this.state);\n    //         }\n    //       );\n    //     });\n    //   } else {\n    //     //if no one signed in, the user = null.\n    //     setCurrentUser(user);\n    //   }\n    // });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path=\"/\" component={HomePage} />\n          <Route path=\"/shop\" component={ShopPage} />\n          <Route\n            exact\n            path=\"/sign\"\n            render={() =>\n              this.props.currentUser ? <Redirect to=\"/\" /> : <SignPage />\n            }\n          />\n          <Route exact path=\"/checkout\" component={CheckoutPage} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: selectCurrentUser(state),\n});\n\n// const mapDispatchToProps = (dispatch) => ({\n//   setCurrentUser: (user) => dispatch(setCurrentUser(user)),\n// });\n\nexport default connect(mapStateToProps)(App);\n"]},"metadata":{},"sourceType":"module"}