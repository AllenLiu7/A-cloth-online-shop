{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Ecommerce\\\\ecommerce_project\\\\src\\\\pages\\\\shop-page\\\\shop-page.component.jsx\";\nimport React, { Component } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchCollectionsStartAsync } from \"../../redux/shop-items/shop-item.actions\";\nimport { selectIsCollectionFetching, selectIsCollectionsLoaded } from \"../../redux/shop-items/shop-item.selectors\";\nimport CollectionPage from \"../collection-page/collection-page.component\";\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.component\";\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {\n    this.props.fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isFetching\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props =>\n      /*#__PURE__*/\n      //...props are history objects\n      React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: isFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nconst mapStateToProps = state => ({\n  isFetching: selectIsCollectionFetching(state),\n  selectIsCollectionsLoaded: selectIsCollectionsLoaded()\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["E:/Projects/Ecommerce/ecommerce_project/src/pages/shop-page/shop-page.component.jsx"],"names":["React","Component","Route","connect","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionsLoaded","CollectionPage","CollectionOverview","WithSpinner","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","props","render","match","isFetching","path","mapDispatchToProps","dispatch","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,0BAAT,QAA2C,0CAA3C;AACA,SACEC,0BADF,EAEEC,yBAFF,QAGO,4CAHP;AAKA,OAAOC,cAAP,MAA2B,8CAA3B;AACA,OAAOC,kBAAP,MAA+B,oEAA/B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AAEA,MAAMC,8BAA8B,GAAGD,WAAW,CAACD,kBAAD,CAAlD;AACA,MAAMG,yBAAyB,GAAGF,WAAW,CAACF,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWV,0BAAX;AACD;;AAEDW,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAwB,KAAKH,KAAnC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,EAFtB;AAGE,MAAA,MAAM,EAAGJ,KAAD;AAAA;AACN;AACA,0BAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAA2DH,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eASE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACE,IAAK,gBADtB;AAEE,MAAA,MAAM,EAAGJ,KAAD,iBACN,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEG;AAAtC,SAAsDH,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CADF;AAkBD;;AA1B8B;;AA6BjC,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,0BAA0B,EAAE,MAAMgB,QAAQ,CAAChB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIA,MAAMiB,eAAe,GAAIC,KAAD,KAAY;AAClCL,EAAAA,UAAU,EAAEZ,0BAA0B,CAACiB,KAAD,CADJ;AAElChB,EAAAA,yBAAyB,EAAEA,yBAAyB;AAFlB,CAAZ,CAAxB;;AAKA,eAAeH,OAAO,CAACkB,eAAD,EAAkBF,kBAAlB,CAAP,CAA6CP,QAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { fetchCollectionsStartAsync } from \"../../redux/shop-items/shop-item.actions\";\r\nimport {\r\n  selectIsCollectionFetching,\r\n  selectIsCollectionsLoaded,\r\n} from \"../../redux/shop-items/shop-item.selectors\";\r\n\r\nimport CollectionPage from \"../collection-page/collection-page.component\";\r\nimport CollectionOverview from \"../../components/collection-overview/collection-overview.component\";\r\nimport WithSpinner from \"../../components/with-spinner/with-spinner.component\";\r\n\r\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionOverview);\r\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\r\n\r\nclass ShopPage extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchCollectionsStartAsync();\r\n  }\r\n\r\n  render() {\r\n    const { match, isFetching } = this.props;\r\n\r\n    return (\r\n      <div className=\"shop-page\">\r\n        <Route\r\n          exact\r\n          path={`${match.path}`}\r\n          render={(props) => (\r\n            //...props are history objects\r\n            <CollectionsOverviewWithSpinner isLoading={isFetching} {...props} />\r\n          )}\r\n        />\r\n        <Route\r\n          path={`${match.path}/:collectionId`}\r\n          render={(props) => (\r\n            <CollectionPageWithSpinner isLoading={isFetching} {...props} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isFetching: selectIsCollectionFetching(state),\r\n  selectIsCollectionsLoaded: selectIsCollectionsLoaded(),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);\r\n"]},"metadata":{},"sourceType":"module"}